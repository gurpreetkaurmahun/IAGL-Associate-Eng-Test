{"ast":null,"code":"var _jsxFileName = \"/Users/gurpreetkaurmahun/Desktop/iagl-todo-app/IAGL-Associate-Eng-Test/src/component/TodoList.js\";\nimport React, { Component } from \"react\";\nimport Todo from \"./Todo\";\nimport { fetchTodos } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TodoList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {};\n  }\n  componentDidMount() {\n    this.props.fetchTodos();\n  }\n  render() {\n    const {\n      todos\n    } = this.props.data;\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: todos && todos.length ? todos.map((todo, index) => {\n        return /*#__PURE__*/_jsxDEV(Todo, {\n          todo: todo.task\n        }, `todo-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 18\n        }, this);\n      }) : \"No todos, yay!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst mapStateToProps = _ref => {\n  let {\n    data = {},\n    isLoadingData = false\n  } = _ref;\n  return {\n    data,\n    isLoadingData\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchTodos\n})(TodoList);","map":{"version":3,"names":["React","Component","Todo","fetchTodos","connect","TodoList","state","componentDidMount","props","render","todos","data","length","map","todo","index","task","mapStateToProps","isLoadingData"],"sources":["/Users/gurpreetkaurmahun/Desktop/iagl-todo-app/IAGL-Associate-Eng-Test/src/component/TodoList.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport Todo from \"./Todo\";\nimport {fetchTodos} from \"../actions\";\nimport {connect} from \"react-redux\";\n\nclass TodoList extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.props.fetchTodos();\n  }\n\n  render() {\n    const {todos} = this.props.data;\n    return (<ul className=\"todo-list\">\n      {todos && todos.length\n        ? todos.map((todo, index) => {\n          return <Todo key={`todo-${index}`} todo={todo.task}/>;\n        })\n        : \"No todos, yay!\"}\n    </ul>);\n  }\n}\n\nconst mapStateToProps = ({data = {}, isLoadingData = false}) => ({\n  data,\n  isLoadingData\n});\nexport default connect(\n  mapStateToProps,\n  {\n    fetchTodos\n  }\n)(TodoList);"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAAQC,UAAU,QAAO,YAAY;AACrC,SAAQC,OAAO,QAAO,aAAa;AAAC;AAEpC,MAAMC,QAAQ,SAASJ,SAAS,CAAC;EAAA;IAAA;IAAA,KAC/BK,KAAK,GAAG,CAAC,CAAC;EAAA;EAEVC,iBAAiB,GAAG;IAClB,IAAI,CAACC,KAAK,CAACL,UAAU,EAAE;EACzB;EAEAM,MAAM,GAAG;IACP,MAAM;MAACC;IAAK,CAAC,GAAG,IAAI,CAACF,KAAK,CAACG,IAAI;IAC/B,oBAAQ;MAAI,SAAS,EAAC,WAAW;MAAA,UAC9BD,KAAK,IAAIA,KAAK,CAACE,MAAM,GAClBF,KAAK,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QAC3B,oBAAO,QAAC,IAAI;UAAuB,IAAI,EAAED,IAAI,CAACE;QAAK,GAAhC,QAAOD,KAAM,EAAC;UAAA;UAAA;UAAA;QAAA,QAAoB;MACvD,CAAC,CAAC,GACA;IAAgB;MAAA;MAAA;MAAA;IAAA,QACjB;EACP;AACF;AAEA,MAAME,eAAe,GAAG;EAAA,IAAC;IAACN,IAAI,GAAG,CAAC,CAAC;IAAEO,aAAa,GAAG;EAAK,CAAC;EAAA,OAAM;IAC/DP,IAAI;IACJO;EACF,CAAC;AAAA,CAAC;AACF,eAAed,OAAO,CACpBa,eAAe,EACf;EACEd;AACF,CAAC,CACF,CAACE,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}